{\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff0\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f10\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}
{\f39\froman\fcharset238\fprq2 Times New Roman CE;}{\f40\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f42\froman\fcharset161\fprq2 Times New Roman Greek;}{\f43\froman\fcharset162\fprq2 Times New Roman Tur;}
{\f44\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f45\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f46\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f47\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}
{\f49\fswiss\fcharset238\fprq2 Arial CE;}{\f50\fswiss\fcharset204\fprq2 Arial Cyr;}{\f52\fswiss\fcharset161\fprq2 Arial Greek;}{\f53\fswiss\fcharset162\fprq2 Arial Tur;}{\f54\fbidi \fswiss\fcharset177\fprq2 Arial (Hebrew);}
{\f55\fbidi \fswiss\fcharset178\fprq2 Arial (Arabic);}{\f56\fswiss\fcharset186\fprq2 Arial Baltic;}{\f57\fswiss\fcharset163\fprq2 Arial (Vietnamese);}{\f59\fmodern\fcharset238\fprq1 Courier New CE;}{\f60\fmodern\fcharset204\fprq1 Courier New Cyr;}
{\f62\fmodern\fcharset161\fprq1 Courier New Greek;}{\f63\fmodern\fcharset162\fprq1 Courier New Tur;}{\f64\fbidi \fmodern\fcharset177\fprq1 Courier New (Hebrew);}{\f65\fbidi \fmodern\fcharset178\fprq1 Courier New (Arabic);}
{\f66\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f67\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;
\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red43\green145\blue175;
\red163\green21\blue21;}{\stylesheet{\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{
\s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\af1\afs32\alang1025 \ltrch\fcs0 \b\f1\fs32\lang1033\langfe1033\kerning32\cgrid\langnp1033\langfenp1033 
\sbasedon0 \snext0 \styrsid10703373 heading 1;}{\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \ab\ai\af1\afs28\alang1025 \ltrch\fcs0 
\b\i\f1\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 \styrsid10703373 heading 2;}{\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \rtlch\fcs1 
\ab\af1\afs26\alang1025 \ltrch\fcs0 \b\f1\fs26\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 \styrsid10703373 heading 3;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblind0\tblindtype3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}{\*\cs15 \additive \rtlch\fcs1 \af0 
\ltrch\fcs0 \ul\cf2 \sbasedon10 \styrsid12675304 Hyperlink;}{\*\cs16 \additive \rtlch\fcs1 \af0 \ltrch\fcs0 \ul\cf12 \sbasedon10 \styrsid1013904 FollowedHyperlink;}}{\*\latentstyles\lsdstimax156\lsdlockeddef0}{\*\listtable{\list\listtemplateid1687568972
\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698705\'02\'00);}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fbias0 \fi-360\li720\jclisttab\tx720\lin720 }
{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li1440\jclisttab\tx1440\lin1440 }
{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'02.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-180\li2160\jclisttab\tx2160\lin2160 }
{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'03.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li2880\jclisttab\tx2880\lin2880 }
{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li3600\jclisttab\tx3600\lin3600 }
{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-180\li4320\jclisttab\tx4320\lin4320 }
{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'06.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li5040\jclisttab\tx5040\lin5040 }
{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li5760\jclisttab\tx5760\lin5760 }
{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-180\li6480\jclisttab\tx6480\lin6480 }
{\listname ;}\listid130026387}{\list\listtemplateid2049190592\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698705\'02\'00);}{\levelnumbers\'01;}\rtlch\fcs1 
\af0 \ltrch\fcs0 \fbias0 \fi-360\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}
\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'02.;}{\levelnumbers\'01;}
\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-180\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'03.;}{\levelnumbers\'01;}
\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}
\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}
\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-180\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'06.;}{\levelnumbers\'01;}
\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}
\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}
\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-180\li6480\jclisttab\tx6480\lin6480 }{\listname ;}\listid464086957}{\list\listtemplateid1289395986\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0
{\leveltext\leveltemplateid67698705\'02\'00);}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fbias0 \fi-360\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0
\levelindent0{\leveltext\leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\lvltentative\levelspace0
\levelindent0{\leveltext\leveltemplateid67698715\'02\'02.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-180\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0
\levelindent0{\leveltext\leveltemplateid67698703\'02\'03.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0
\levelindent0{\leveltext\leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\lvltentative\levelspace0
\levelindent0{\leveltext\leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-180\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0
\levelindent0{\leveltext\leveltemplateid67698703\'02\'06.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0
\levelindent0{\leveltext\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\lvltentative\levelspace0
\levelindent0{\leveltext\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-180\li6480\jclisttab\tx6480\lin6480 }{\listname ;}\listid685180227}{\list\listtemplateid1122134816\listhybrid{\listlevel\levelnfc0\levelnfcn0
\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698705\'02\'00);}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fbias0 \fi-360\li720\lin720 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0
\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li1440\lin1440 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0
\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'02.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-180\li2160\lin2160 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1
\lvltentative\levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'03.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li2880\lin2880 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative
\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li3600\lin3600 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\lvltentative\levelspace0
\levelindent0{\leveltext\leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-180\li4320\lin4320 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0
{\leveltext\leveltemplateid67698703\'02\'06.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li5040\lin5040 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext
\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li5760\lin5760 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\lvltentative\levelspace0\levelindent0{\leveltext
\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-180\li6480\lin6480 }{\listname ;}\listid786705119}{\list\listtemplateid1168915396\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0
\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative
\levelspace360\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360
\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0
{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext
\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698693
\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698689
\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698691
\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative\levelspace360\levelindent0{\leveltext\leveltemplateid67698693
\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li6480\jclisttab\tx6480\lin6480 }{\listname ;}\listid1316714771}{\list\listtemplateid-1278307676\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0
\levelindent0{\leveltext\leveltemplateid67698705\'02\'00);}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fbias0 \fi-360\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative
\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\lvltentative
\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'02.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-180\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative
\levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'03.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative
\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\lvltentative
\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-180\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative
\levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'06.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\lvltentative
\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\lvltentative
\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \fi-180\li6480\jclisttab\tx6480\lin6480 }{\listname ;}\listid2082605605}}{\*\listoverridetable{\listoverride\listid130026387
\listoverridecount0\ls1}{\listoverride\listid786705119\listoverridecount0\ls2}{\listoverride\listid2082605605\listoverridecount0\ls3}{\listoverride\listid464086957\listoverridecount0\ls4}{\listoverride\listid685180227\listoverridecount0\ls5}
{\listoverride\listid1316714771\listoverridecount0\ls6}}{\*\rsidtbl \rsid32378\rsid89361\rsid283711\rsid478035\rsid483942\rsid1013904\rsid1408106\rsid1460618\rsid1655678\rsid1659061\rsid1908446\rsid1932416\rsid2315071\rsid2432963\rsid2497976\rsid2643707
\rsid2652793\rsid2829749\rsid2845617\rsid3099116\rsid3149574\rsid3160347\rsid3218881\rsid3435944\rsid3555162\rsid3605807\rsid3760372\rsid3887546\rsid4218235\rsid4524050\rsid4982414\rsid5074900\rsid5183295\rsid5184116\rsid5450346\rsid5517092\rsid5571757
\rsid5781541\rsid6037321\rsid6041525\rsid6055673\rsid6296225\rsid6320072\rsid6509737\rsid6562733\rsid6624400\rsid6706447\rsid6771254\rsid7214897\rsid7354039\rsid7411252\rsid7427807\rsid7563147\rsid7686316\rsid7876934\rsid7887376\rsid7937124\rsid8158488
\rsid8205052\rsid8412988\rsid8551083\rsid8872195\rsid8983329\rsid9324333\rsid9381580\rsid9401311\rsid9589650\rsid9724196\rsid9853054\rsid10311674\rsid10515867\rsid10703373\rsid10833686\rsid10834977\rsid10842059\rsid10960476\rsid11559080\rsid11603567
\rsid11948210\rsid12351029\rsid12477343\rsid12478443\rsid12480469\rsid12675304\rsid12737063\rsid12913132\rsid13316648\rsid13446123\rsid13980339\rsid14095486\rsid14103466\rsid14232554\rsid14253497\rsid14309294\rsid14573838\rsid14746123\rsid15085936
\rsid15217142\rsid15220984\rsid15286429\rsid15363971\rsid15475844\rsid15498287\rsid15539938\rsid15543112\rsid15741723\rsid15882632\rsid15886061\rsid15932462\rsid15950545\rsid16008867\rsid16277176\rsid16450858\rsid16592294}{\*\generator Microsoft Word 11.
0.0000;}{\info{\title DirectShowLib Version 1}{\author David Wohlferd}{\operator David Wohlferd}{\creatim\yr2005\mo6\dy17\hr16\min11}{\revtim\yr2008\mo9\dy18\hr20\min24}{\version41}{\edmins237}{\nofpages7}{\nofwords2378}{\nofchars13560}
{\*\company Personal Copy}{\nofcharsws15907}{\vern24613}{\*\password 00000000}}{\*\xmlnstbl {\xmlns1 http://schemas.microsoft.com/office/word/2003/wordml}}\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect 
\widowctrl\ftnbj\aenddoc\donotembedsysfont0\donotembedlingdata1\grfdocevents0\validatexml0\showplaceholdtext0\ignoremixedcontent0\saveinvalidxml0\showxmlerrors0\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120
\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind4\viewscale150\nolnhtadjtbl\rsidroot2845617 \fet0{\*\wgrffmtfilter 013f}\ilfomacatclnup0\ltrpar \sectd \ltrsect\linex0\sectdefaultcl\sftnbj {\*\pnseclvl1
\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang 
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \ltrpar
\s1\ql \li0\ri-1620\sb240\sa60\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \ab\af1\afs32\alang1025 \ltrch\fcs0 
\b\f1\fs32\lang1033\langfe1033\kerning32\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid15475844\charrsid1655678 WindowsMedia}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid5450346\charrsid1655678 Lib Version }{\rtlch\fcs1 \af1 \ltrch\fcs0 
\insrsid6296225 1.0}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid5450346\charrsid1655678 
\par }\pard\plain \ltrpar\ql \li0\ri-1620\sb100\sa100\nowidctlpar\wrapdefault\faauto\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid5450346\charrsid1932416 Version}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid6296225\charrsid1932416  1.0}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid5450346\charrsid1932416  of the }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15475844\charrsid1932416 
WindowsMedia}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid5450346\charrsid1932416 Lib library is the result of work done by:
\par }\pard \ltrpar\ql \li0\ri-1620\nowidctlpar\wrapdefault\faauto\rin-1620\lin0\itap0\pararsid1932416 {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid5450346\charrsid1932416 David Wohlferd (}{\field\flddirty{\*\fldinst {\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid5450346\charrsid1932416  HYPERLINK "mailto:snarfle@users.SourceForge.net" }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15886061\charrsid1932416 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000001e00000073006e006100720066006c0065004000750073006500720073002e0053006f00750072006300650046006f007200670065002e006e00650074000000e0c9ea79f9bace118c8200aa004ba90b4a0000006d00610069006c0074006f003a0073006e00
6100720066006c0065004000750073006500720073002e0053006f00750072006300650046006f007200670065002e006e0065007400000000000000000000000000000000}}}{\fldrslt {\rtlch\fcs1 \af1 \ltrch\fcs0 \cs15\f1\ul\cf2\insrsid5450346\charrsid1932416 
snarfle@users.SourceForge.net}}}\sectd \linex0\sectdefaultcl\sftnbj {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid5450346\charrsid1932416 )
\par }\pard\plain \ltrpar\s3\ql \li0\ri-1620\sb240\sa60\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \ab\af1\afs26\alang1025 \ltrch\fcs0 
\b\f1\fs26\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \ab0\af1\afs24 \ltrch\fcs0 \b0\fs24\insrsid9381580\charrsid1932416 Bryce Kahle (}{\field\flddirty{\*\fldinst {\rtlch\fcs1 \ab0\af1\afs24 \ltrch\fcs0 
\b0\fs24\insrsid9381580\charrsid1932416  HYPERLINK "mailto:bwkahle@users.sourceforge.net" }{\rtlch\fcs1 \af1\afs24 \ltrch\fcs0 \b0\fs24\insrsid15886061\charrsid1932416 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000001e000000620077006b00610068006c0065004000750073006500720073002e0073006f00750072006300650066006f007200670065002e006e00650074000000e0c9ea79f9bace118c8200aa004ba90b620000006d00610069006c0074006f003a0062007700
6b00610068006c0065004000750073006500720073002e0073006f00750072006300650066006f007200670065002e006e00650074000000795881f43b1d7f48af2c825dc485276300000000a5ab000000000000}}}{\fldrslt {\rtlch\fcs1 \af1\afs24 \ltrch\fcs0 
\cs15\b0\fs24\ul\cf2\insrsid9381580\charrsid1932416 bwkahle@users.sourceforge.net}}}\sectd \linex0\sectdefaultcl\sftnbj {\rtlch\fcs1 \ab0\af1\afs24 \ltrch\fcs0 \b0\fs24\insrsid9381580\charrsid1932416 ) 
\par }{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid2845617\charrsid1655678 Purpose of this library - What it is, what it isn't
\par }\pard\plain \ltrpar\ql \li0\ri-1620\sb100\sa100\nowidctlpar\wrapdefault\faauto\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid9853054\charrsid1932416 Reviewing the source code will show that there is very little executable code}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15741723\charrsid1932416  in this library}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid9853054\charrsid1932416 .  There are a few helper functions (mostly in }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1655678\charrsid1932416 WM}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid9853054\charrsid1932416 Utils.cs), but everything else in }{
\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid6296225\charrsid1932416 the library is just definitions to allow access to the code in Microsoft\rquote s Windows Media DLLs.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid9853054\charrsid1932416 
\par }\pard\plain \ltrpar\s3\ql \li0\ri-1620\sb240\sa60\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \ab\af1\afs26\alang1025 \ltrch\fcs0 
\b\f1\fs26\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid15741723\charrsid1655678 Licensing questions
\par }\pard\plain \ltrpar\ql \li0\ri-1620\sb100\sa100\nowidctlpar\wrapdefault\faauto\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid15741723\charrsid1932416 This library is licensed under }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid7427807\charrsid1932416 GNU LESSER GENERAL PUBLIC LICENSE}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15741723\charrsid1932416 , }{\rtlch\fcs1 \af1 
\ltrch\fcs0 \f1\insrsid7427807\charrsid1932416 Version 2.1}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15741723\charrsid1932416 .}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid7427807\charrsid1932416   See license.txt for the complete text.}{\rtlch\fcs1 \af1 
\ltrch\fcs0 \f1\insrsid15741723\charrsid1932416 
\par }\pard\plain \ltrpar\s3\ql \li0\ri-1620\sb240\sa60\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \ab\af1\afs26\alang1025 \ltrch\fcs0 
\b\f1\fs26\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid2845617\charrsid1655678 Supported platforms, languages}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \fs20\insrsid2845617\charrsid1655678 
\par }\pard\plain \ltrpar\ql \li0\ri-1620\sb100\sa100\nowidctlpar\wrapdefault\faauto\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1\afs22 \ltrch\fcs0 
\f1\fs22\insrsid2845617\charrsid1932416 This library }{\rtlch\fcs1 \af1\afs22 \ltrch\fcs0 \f1\fs22\insrsid6296225\charrsid1932416 has been tested from C#, }{\rtlch\fcs1 \af1\afs22 \ltrch\fcs0 \f1\fs22\insrsid2845617\charrsid1932416 
and should work from other .NET compatible languages..
\par }\pard\plain \ltrpar\s3\ql \li0\ri-1620\sb240\sa60\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \ab\af1\afs26\alang1025 \ltrch\fcs0 
\b\f1\fs26\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid2845617\charrsid1655678 {\*\bkmkstart _Ref106788285}Where to find the documentation}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 
\fs20\insrsid2845617\charrsid1655678 {\*\bkmkend _Ref106788285}
\par }\pard\plain \ltrpar\ql \li0\ri-1620\sb100\sa100\nowidctlpar\wrapdefault\faauto\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid2845617\charrsid1932416 Since the purpose of this library is to allow for the calling of the }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15475844\charrsid1932416 Windows Media }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 
interfaces, the primary source of documentation is MSDN.  You can find }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid7411252\charrsid1932416 Windows Media}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416  documentation (today at least) at}{
\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15539938\charrsid1932416  }{\field\flddirty{\*\fldinst {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid14253497\charrsid1932416  HYPERLINK "http://msdn.microsoft.com/en-us/library/aa387410(VS.85).aspx" }{\rtlch\fcs1 \af1 
\ltrch\fcs0 \f1\insrsid15886061\charrsid1932416 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000003d00000068007400740070003a002f002f006d00730064006e002e006d006900630072006f0073006f00660074002e0063006f006d002f0065006e002d00750073002f006c006900620072006100720079002f00610061003300380037003400310030002800
560053002e003800350029002e0061007300700078000000e0c9ea79f9bace118c8200aa004ba90b9200000068007400740070003a002f002f006d00730064006e002e006d006900630072006f0073006f00660074002e0063006f006d002f0065006e002d00750073002f006c006900620072006100720079002f00610061
003300380037003400310030002800560053002e003800350029002e0061007300700078000000795881f43b1d7f48af2c825dc485276300000000a5ab000000000000}}}{\fldrslt {\rtlch\fcs1 \af1 \ltrch\fcs0 \cs15\f1\ul\cf2\insrsid14253497\charrsid1932416 
http://msdn.microsoft.com/en-us/library/aa387410(VS.85).aspx}}}\sectd \linex0\sectdefaultcl\sftnbj {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 .  The interfaces are documented in the }{\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid9853054\charrsid1932416 \'93}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15475844\charrsid1932416 Interfaces}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid9853054\charrsid1932416 \'94 section}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15085936 
, but there is other documentation there that will help you understand the design of WM.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 
\par }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid9853054\charrsid1932416 The few helper classes }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15475844\charrsid1932416 that }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid9853054\charrsid1932416 have }{\rtlch\fcs1 \af1 
\ltrch\fcs0 \f1\insrsid15475844\charrsid1932416 been }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid9853054\charrsid1932416 added are documented below in }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid7887376\charrsid1932416 \'93}{\field\flddirty{\*\fldinst {
\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid6706447\charrsid1932416  REF _Ref106788262 \\h }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15886061\charrsid1932416 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f00520065006600310030003600370038003800320036003200000000000000000000000000}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1655678\charrsid1932416  \\* MERGEFORMAT }}{\fldrslt {\rtlch\fcs1 \af1 
\ltrch\fcs0 \f1\insrsid6706447\charrsid1932416 Helper Classes}}}\sectd \linex0\sectdefaultcl\sftnbj {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid7887376\charrsid1932416 \'94}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid9853054\charrsid1932416 .}{\rtlch\fcs1 \af1 
\ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 
\par }\pard\plain \ltrpar\s3\ql \li0\ri-1620\sb240\sa60\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \ab\af1\afs26\alang1025 \ltrch\fcs0 
\b\f1\fs26\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid1655678 Using WindowsMediaLib with DirectShowLib
\par }\pard\plain \ltrpar\ql \li0\ri-1620\sb100\sa100\nowidctlpar\wrapdefault\faauto\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid1655678\charrsid1932416 In general, these two libraries should work well together.  If you are using both, make sure you do NOT use \'93using WindowsMediaLib.Defs;\'94 as all items in that namespace are already defined in DirectShowLib.
\par }\pard\plain \ltrpar\s3\ql \li0\ri-1620\sb240\sa60\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \ab\af1\afs26\alang1025 \ltrch\fcs0 
\b\f1\fs26\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid2845617\charrsid1655678 Differences between MSDN docs and using our library
\par }\pard\plain \ltrpar\ql \li0\ri-1620\sb100\sa100\nowidctlpar\wrapdefault\faauto\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid14103466\charrsid14103466 It most cases, you should expect that you call the interface methods the same way MSDN says it should be called.  The primary differences between the library\rquote 
s definitions and those found on MSDN are related to return codes (See \'93Error handling\'94 below) and places where MSDN documents methods parameters as int, but then says the content of the int is some enum.  The definition }{\rtlch\fcs1 \af1 
\ltrch\fcs0 \f1\insrsid14232554 in the library }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid14103466\charrsid14103466 is changed to be the enum, so Visual Studio\rquote s intelli-sense will offer up the legal values while typing code.}{\rtlch\fcs1 \af1 
\ltrch\fcs0 \f1\insrsid14103466 
\par }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid9853054\charrsid1655678 The names of the structures and enum have }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15085936 often }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid9853054\charrsid1655678 
been changed to use a more .NET friendly style: AM_SAMPLE2_PROPERTIES -> AMSample2Properties}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1408106\charrsid1655678 
.  Note that the original C++ structure or enum name is provided above the declaration.  If there is some specific declaration you need to find, do a scan of the }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid16277176\charrsid1655678 library\rquote s }{
\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1408106\charrsid1655678 source file}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid16277176\charrsid1655678 s}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1408106\charrsid1655678  for the name.}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid9853054\charrsid1655678 
\par }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid7887376\charrsid1655678 Also see the sections below on \'93}{\field\flddirty{\*\fldinst {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid6706447\charrsid1655678  REF _Ref106788322 \\h }{\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid15886061\charrsid1655678 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f00520065006600310030003600370038003800330032003200000000000000000000000000}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1655678  \\* MERGEFORMAT }
}{\fldrslt {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid6706447\charrsid1655678 How and when to use Marshal.ReleaseComObject()}}}\sectd \linex0\sectdefaultcl\sftnbj {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid7887376\charrsid1655678 \'94 and \'93}
{\field\flddirty{\*\fldinst {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid6706447\charrsid1655678  REF _Ref106788341 \\h }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15886061\charrsid1655678 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f005200650066003100300036003700380038003300340031000000000000000000}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1655678  \\* MERGEFORMAT }}{\fldrslt {\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid15475844\charrsid1655678 Releasing memory to avoid leaks (Marshal.FreeCoTaskMem, FreeWMMediaType)}}}\sectd \linex0\sectdefaultcl\sftnbj {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15475844\charrsid1655678 .}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid7887376\charrsid1655678 \'94}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid7887376 
\par }\pard\plain \ltrpar\s3\ql \li0\ri-1620\sb240\sa60\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \ab\af1\afs26\alang1025 \ltrch\fcs0 
\b\f1\fs26\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid9724196\charrsid9724196 Error handling
\par }\pard\plain \ltrpar\ql \li0\ri-1620\sb100\sa100\nowidctlpar\wrapdefault\faauto\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid10311674 As a}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid14232554  general}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid10311674  statement}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid14232554 
, there are two different ways that a function can report whether it succeeded in performing the task it has been called to perform:
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid14232554 \hich\af1\dbch\af0\loch\f1 1)\tab}}\pard \ltrpar\ql \fi-360\li720\ri-1620\sb100\sa100\nowidctlpar\jclisttab\tx720\wrapdefault\faauto\ls4\rin-1620\lin720\itap0\pararsid14232554 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid14232554 It can use a return value to indicate success or failure}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2315071  (PreserveSig(true))}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid14232554 
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid14232554 \hich\af1\dbch\af0\loch\f1 2)\tab}It can throw an exception}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2315071  (PreserveSig(false))}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid14232554 
\par }\pard \ltrpar\ql \li0\ri-1620\sb100\sa100\nowidctlpar\wrapdefault\faauto\rin-1620\lin0\itap0\pararsid14232554 {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid14232554 Nearly all of the Windows }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15882632 
methods, and virtually all COM methods}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid14232554  use #1.  However, .Net is }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2315071 generally}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid14232554 
 based around #2.  When the code was being wri
tten for the DirectShowLib library, the decision was made to use return values.  This was consistent with the MSDN docs as well as being more consistent with any c++ sample code that people may use for reference.
\par In this library, however, we\rquote ve gone the other way.  If you call a method and that method fails, it will throw an exception.  This was done for a couple of reasons:
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid14232554 \hich\af1\dbch\af0\loch\f1 1)\tab}}\pard \ltrpar\ql \fi-360\li720\ri-1620\sb100\sa100\nowidctlpar\jclisttab\tx720\wrapdefault\faauto\ls5\rin-1620\lin720\itap0\pararsid14232554 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid14232554 It is more c#-like.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2315071 \hich\af1\dbch\af0\loch\f1 2)\tab}}\pard \ltrpar\ql \fi-360\li720\ri-1620\sb100\sa100\nowidctlpar\jclisttab\tx720\wrapdefault\faauto\ls5\rin-1620\lin720\itap0\pararsid2315071 {
\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2315071 It makes for generally cleaner code.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid14232554 
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid2315071 \hich\af1\dbch\af0\loch\f1 3)\tab}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2315071 
Since most other .Net calls are already throwing exceptions on errors, this avoids having to do double error checking.
\par }\pard \ltrpar\ql \li0\ri-1620\sb100\sa100\nowidctlpar\wrapdefault\faauto\rin-1620\lin0\itap0\pararsid2315071 {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2315071 
However, there is a cost.  While performance is the same for calls that succeed, when the method must throw an exception, the performance is slower using (PreserveSig(false)) than it is for (PreserveSig(true)).
\par In most cases, this difference in performance is not likely to be an issue.  Usually if something is throwing an exception, the task in process}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid8412988  ends up getting aborted anyway.  Howev
er it could be an issue if you end up throwing many exceptions somewhere deep inside some inner-most loop.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2315071 
\par }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid8412988 A couple other notes about exceptions:
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af1 \ltrch\fcs0 \f3\insrsid9724196\charrsid9724196 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \ltrpar\ql \fi-360\li720\ri-1620\sb100\sa100\nowidctlpar
\jclisttab\tx720\wrapdefault\faauto\ls6\rin-1620\lin720\itap0\pararsid10311674 {\rtlch\fcs1 \af1 \ltrch\fcs0 \i\f1\insrsid9724196\charrsid9724196 Calling COM interfaces}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid9724196\charrsid9724196 : }{\rtlch\fcs1 \af1 
\ltrch\fcs0 \f1\insrsid8412988 Since}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid9724196\charrsid9724196  the majority of methods in this library are declared }{\rtlch\fcs1 \af1 \ltrch\fcs0 \b\f1\insrsid9724196\charrsid9724196 without}{\rtlch\fcs1 \af1 
\ltrch\fcs0 \f1\insrsid9724196\charrsid9724196  PreserveSig (or with PreserveSig(false)).  This means that .NET will check the return code for you, and turn failure codes into exceptions.  So, it isn\rquote t necessary }{\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid8412988 (indeed it isn\rquote t possible) }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid9724196\charrsid9724196 to check the return codes after each call.  All you need to do is catch the exceptions}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid9724196 
.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid10311674 
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af1 \ltrch\fcs0 \f3\insrsid9724196\charrsid9724196 \loch\af3\dbch\af0\hich\f3 \'b7\tab}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \i\f1\insrsid9724196\charrsid9724196 Implementing COM interfaces}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid9724196\charrsid9724196 : When you implement interfaces in c# (like }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid7214897\charrsid7214897 IWMReaderCallback}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid7214897  in the }{\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid1932416\charrsid1932416 AudioPlayer}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1932416  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid9724196\charrsid9724196 sample), you can e
ither define the interface to return an int and return the HRESULT (ie using PreserveSig), or you can do what this library does and define them as void.  In that case, you simply throw exceptions to indicate errors.  .Net will turn them into the appropria
te COM error.
\par }\pard \ltrpar\ql \li720\ri-1620\sb100\sa100\nowidctlpar\wrapdefault\faauto\rin-1620\lin720\itap0\pararsid1932416 {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid9724196\charrsid9724196 
This works very well with point #1.  If the code implementing the COM object doesn\rquote t explicitly catch errors from }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1932416 the }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid9724196 WM}{\rtlch\fcs1 \af1 
\ltrch\fcs0 \f1\insrsid9724196\charrsid9724196  calls}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1932416  it makes}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid9724196\charrsid9724196 
, they get propagated up to the COM interface, turned into HRESULTs and sent back to the caller.
\par }\pard \ltrpar\ql \li0\ri-1620\sb100\sa100\nowidctlpar\wrapdefault\faauto\rin-1620\lin0\itap0\pararsid1932416 {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid9724196 Turning c++
 code into c# core routinely drops several hundred lines of code (and several levels of indention) when removing all the \'93if FAILED\'94 code.
\par }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid8412988 Here is some code that might be useful for turning exceptions into HRESULTS or error strings:
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid8412988 {\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\lang1024\langfe1024\noproof\insrsid8412988    }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\f2\fs20\cf2\lang1024\langfe1024\noproof\insrsid8412988 catch}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\lang1024\langfe1024\noproof\insrsid8412988  (}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf17\lang1024\langfe1024\noproof\insrsid8412988 Exception
}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\lang1024\langfe1024\noproof\insrsid8412988  e)
\par    \{
\par       }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\lang1024\langfe1024\noproof\insrsid8412988 int}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\lang1024\langfe1024\noproof\insrsid8412988  hr = }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\f2\fs20\cf17\lang1024\langfe1024\noproof\insrsid8412988 Marshal}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\lang1024\langfe1024\noproof\insrsid8412988 .GetHRForException(e);
\par       }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\lang1024\langfe1024\noproof\insrsid8412988 string}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\lang1024\langfe1024\noproof\insrsid8412988  s = }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\f2\fs20\cf17\lang1024\langfe1024\noproof\insrsid8412988 WMError}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\lang1024\langfe1024\noproof\insrsid8412988 .GetErrorText(hr);
\par 
\par       }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\lang1024\langfe1024\noproof\insrsid8412988 if}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\lang1024\langfe1024\noproof\insrsid8412988  (s == }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\f2\fs20\cf2\lang1024\langfe1024\noproof\insrsid8412988 null}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\lang1024\langfe1024\noproof\insrsid8412988 )
\par       \{
\par          s = e.Message;
\par       \}
\par       }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\lang1024\langfe1024\noproof\insrsid8412988 else
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\lang1024\langfe1024\noproof\insrsid8412988       \{
\par          s = }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\lang1024\langfe1024\noproof\insrsid8412988 string}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\lang1024\langfe1024\noproof\insrsid8412988 .Format(}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\f2\fs20\cf18\lang1024\langfe1024\noproof\insrsid8412988 "\{0\} (\{1\})"}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\lang1024\langfe1024\noproof\insrsid8412988 , s, e.Message);
\par       \}
\par 
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\faauto\rin0\lin720\itap0\pararsid8412988 {\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf17\lang1024\langfe1024\noproof\insrsid8412988 MessageBox}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\f2\fs20\lang1024\langfe1024\noproof\insrsid8412988 .Show(
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf17\lang1024\langfe1024\noproof\insrsid8412988    }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf2\lang1024\langfe1024\noproof\insrsid8412988 string}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\f2\fs20\lang1024\langfe1024\noproof\insrsid8412988 .Format(}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf18\lang1024\langfe1024\noproof\insrsid8412988 "0x\{0:x\}: \{1\}"}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\f2\fs20\lang1024\langfe1024\noproof\insrsid8412988 , hr, s), 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf18\lang1024\langfe1024\noproof\insrsid8412988    "Exception"}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\lang1024\langfe1024\noproof\insrsid8412988 ,
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf18\lang1024\langfe1024\noproof\insrsid8412988    }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf17\lang1024\langfe1024\noproof\insrsid8412988 MessageBoxButtons}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\f2\fs20\lang1024\langfe1024\noproof\insrsid8412988 .OK,
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\cf17\lang1024\langfe1024\noproof\insrsid8412988    MessageBoxIcon}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\lang1024\langfe1024\noproof\insrsid8412988 .Error);
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid8412988 {\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\lang1024\langfe1024\noproof\insrsid8412988    \}
\par }\pard\plain \ltrpar\s3\ql \li0\ri-1620\sb240\sa60\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \ab\af1\afs26\alang1025 \ltrch\fcs0 
\b\f1\fs26\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid2845617\charrsid1655678 {\*\bkmkstart _Ref106788322}How and when to use Marshal.ReleaseComObject(){\*\bkmkend _Ref106788322}
\par }\pard\plain \ltrpar\ql \li0\ri-1620\sb100\sa100\nowidctlpar\wrapdefault\faauto\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid2845617\charrsid1932416 .NET has a built-in limitation when handling COM methods.  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid5571757\charrsid1932416 This problem affects any .NET class calling COM, not just our library.  }{\rtlch\fcs1 \af1 
\ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 The problem }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid14746123\charrsid1932416 description }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 is }{\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid14746123\charrsid1932416 rather }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 involved, but boils down to two }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid14746123\charrsid1932416 key }{\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid2845617\charrsid1932416 facts:
\par 1) Objects in .NET aren't released as soon as they go out of scope.  You have to wait for the }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid10834977\charrsid1932416 G}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 arbage }{\rtlch\fcs1 \af1 
\ltrch\fcs0 \f1\insrsid10834977\charrsid1932416 C}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 ollector to free them.  As a result, you may get "in use" errors for items you thought should be released.  GC.Collect may help}{
\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid14746123\charrsid1932416  with this}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 .  Also, you can use Marshal.ReleaseComObject.  However, that may introduce other problems (see #2).
\par 2) If you create a }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid3099116\charrsid1932416 COM}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416  object, then do 
\par }\pard \ltrpar\ql \li0\ri-1620\nowidctlpar\wrapdefault\faauto\rin-1620\lin0\itap0\pararsid1932416 {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid14746123\charrsid1932416 IGraphBuilder  graphBuilder = (IGraphBuilder) new FilterGraph();
\par IMediaControl  imc}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416  = }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid14746123\charrsid1932416 graphBuilder}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416  as }{\rtlch\fcs1 \af1 
\ltrch\fcs0 \f1\insrsid14746123\charrsid1932416 IMediaControl}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 ;
\par }\pard \ltrpar\ql \li0\ri-1620\sb100\sa100\nowidctlpar\wrapdefault\faauto\rin-1620\lin0\itap0\pararsid1932416 {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 Calling Marshal.ReleaseComObject on either }{\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid14746123\charrsid1932416 graphBuilder }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 or }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid14746123\charrsid1932416 imc }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 
will invalidate BOTH }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid14746123\charrsid1932416 graphBuilder }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 and }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid14746123\charrsid1932416 imc}{\rtlch\fcs1 
\af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 .  For a good article on this, }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid10834977\charrsid1932416 read }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 Chris Brumme's weblog at }
{\field\flddirty{\*\fldinst {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid10834977\charrsid1932416  HYPERLINK "http://blogs.msdn.com/cbrumme/archive/2003/04/16/51355.aspx" }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15886061\charrsid1932416 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b7800000068007400740070003a002f002f0062006c006f00670073002e006d00730064006e002e0063006f006d002f0063006200720075006d006d0065002f0061007200630068006900760065002f00320030003000
33002f00300034002f00310036002f00350031003300350035002e006100730070007800000000000000000000000000000000000000}}}{\fldrslt {\rtlch\fcs1 \af1 \ltrch\fcs0 \cs15\f1\ul\cf2\insrsid2845617\charrsid1932416 
http://blogs.msdn.com/cbrumme/archive/2003/04/16/51355.aspx}}}\sectd \linex0\sectdefaultcl\sftnbj {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 .}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15085936 
  The net result is that if you need either imc or graphBuilder to stay available, you mustn\rquote t free either of them.  When you are done with both, free only one of them.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 
\par }\pard\plain \ltrpar\s3\ql \li0\ri-1620\sb240\sa60\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \ab\af1\afs26\alang1025 \ltrch\fcs0 
\b\f1\fs26\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid2845617\charrsid1655678 {\*\bkmkstart _Ref106788341}Releasing memory to avoid leaks (Marshal.Fre}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\insrsid15475844\charrsid1655678 eCoTaskMem, FreeWMMediaType}{\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid2845617\charrsid1655678 ){\*\bkmkend _Ref106788341}
\par }\pard\plain \ltrpar\ql \li0\ri-1620\sb100\sa100\nowidctlpar\wrapdefault\faauto\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid2845617\charrsid1932416 Some of the interfaces in }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid14253497\charrsid1932416 Windows Media}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416  allocate memory that nee
ds to be released by the caller.  Make sure you read the }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid5571757\charrsid1932416 MSDN }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 
docs for any methods you are calling to ensure that you know when you are required to release memory.  Be aware that memory allocated by COM objects isn't automatically freed }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid5571757\charrsid1932416 
by the Garbage Collector }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 like memory allocated for you by most .NET functions.
\par }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid483942\charrsid1932416 As an example, look at }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 IMediaSample::GetMediaType}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid483942\charrsid1932416 
.  The memory for the class returned by this method can be released with WM}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 Utils.Free}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15475844\charrsid1932416 W}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid483942\charrsid1932416 MMediaType().}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 
\par }\pard\plain \ltrpar\s3\ql \li0\ri-1620\sb240\sa60\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \ab\af1\afs26\alang1025 \ltrch\fcs0 
\b\f1\fs26\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid7887376\charrsid1655678 {\*\bkmkstart _Ref106788262}Helper Classes{\*\bkmkend _Ref106788262}
\par }\pard\plain \ltrpar\ql \li0\ri-1620\sb100\sa100\nowidctlpar\wrapdefault\faauto\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid7887376\charrsid1932416 While the library primarily just provides mappings to the }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid14253497\charrsid1932416 Windows Media}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid7887376\charrsid1932416 
 interfaces, there are a few helper functions we have added that may be useful:
\par }{\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid15475844\charrsid1932416 Ns}{\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid7887376\charrsid1932416 Results}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid7887376\charrsid1932416  \endash  This class consists of }{
\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15475844\charrsid1932416 Windows Media }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid7887376\charrsid1932416 specific error and status codes.  It }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid7563147\charrsid1932416 
is based on}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15475844\charrsid1932416  NsError}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid7887376\charrsid1932416 
.h.  Note that it does NOT include regular COM error codes such as might be found in winerror.h.  These codes can be used to check for known error conditions:
\par }\pard \ltrpar\ql \li0\ri-1620\widctlpar\wrapdefault\faauto\rin-1620\lin0\itap0\pararsid1932416 {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid7887376\charrsid1932416 hr = iSomething.DoSomething();
\par }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\cf2\insrsid7887376\charrsid1932416 if}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid7887376\charrsid1932416  (hr == }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15475844\charrsid1932416 N}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid7887376\charrsid1932416 sResults.E_NotConnected)
\par    }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\cf11\insrsid7887376\charrsid1932416 // Try connecting
\par }\pard \ltrpar\ql \li0\ri-1620\sb100\sa100\nowidctlpar\wrapdefault\faauto\rin-1620\lin0\itap0\pararsid1932416 {\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid1659061 WM}{\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid7887376\charrsid1932416 Utils}{
\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid7887376\charrsid1932416  \endash  This class contains }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid3887546 the definitions for all the WM methods that aren\rquote t members of interfaces (ie }{\rtlch\fcs1 \af1 
\ltrch\fcs0 \f1\insrsid3887546\charrsid3887546 WMCreateReader}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid3887546 , }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid3887546\charrsid3887546 WMCreateIndexer}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid3887546 
, etc).  It also contains}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\insrsid7887376\charrsid3887546 
\par }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid7887376\charrsid1932416 Free}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1659061 W}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid7887376\charrsid1932416 MMediaType \endash 
 This method should be called to release any AMMediaType structures.  Do not depend on the Garbage Collector to correctly release AMMediaType structures.  It is the .NET implementation of the MSDN }{\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid7563147\charrsid1932416 function }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid7887376\charrsid1932416 DeleteMediaType}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid7563147\charrsid1932416 ()}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid7887376\charrsid1932416 .
\par }\pard \ltrpar\ql \li0\ri0\sb100\sa100\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid10960476 {\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid10960476 WM}{\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid10960476\charrsid10960476 Error}{\rtlch\fcs1 
\af1 \ltrch\fcs0 \f1\insrsid10960476\charrsid10960476  \endash  This class contains two methods.  
\par ThrowExceptionForHR is a wrapper for Marshal.ThrowExceptionForHR, but additionally provides descriptions for any }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid10960476 Windows Media}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid10960476\charrsid10960476 
 specific error messages.  Note that you do not have to check for negative values before calling this method.  If the hr value is not a fatal error, no exception will be thrown:
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid10960476 {\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid10960476\charrsid10960476 hr = iSomething.DoSomething();
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid10960476 WM}{\rtlch\fcs1 \af2 \ltrch\fcs0 \f2\insrsid10960476\charrsid10960476 Error.ThrowExceptionForHR(hr);
\par 
\par }\pard \ltrpar\ql \li0\ri0\sb100\sa100\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid8205052 {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid10960476\charrsid10960476 GetErrorText }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid8205052\charrsid10960476 
retrieve}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid8205052 s}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid8205052\charrsid10960476  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid8205052 the Windows Media }{\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid8205052\charrsid10960476 error code text}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid8205052  for the given error code}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid8205052\charrsid10960476 .
\par }\pard \ltrpar\ql \li0\ri0\sb100\sa100\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid14095486 {\rtlch\fcs1 \af1 \ltrch\fcs0 \b\f1\insrsid14095486\charrsid14095486 COMBase}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid14095486\charrsid14095486  
\endash  This class is intended to be the parent of classes that implement COM interfaces.  It can also be used as a parent to classes that merely call COM classes.  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid14095486 
It also contains definitions for the common COM errors (E_Fail, E_Abort, etc).  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid14095486\charrsid14095486 Note: There is no requirement to use this class, but it can be helpful.
\par Succeeded: Checks to see if an HRESULT code is not a failure code (ie >= 0).  This isn\rquote t generally useful since most methods in the library with throw exceptions rather than returning HRESULTs.
\par Failed: Checks to see if an HRESULT code is a failure code (ie < 0).  This isn\rquote t generally useful since most methods in the library with throw exceptions rather than returning HRESULTs.
\par SafeRelease: Calls Dispose or Marshal.ReleaseComObject against objects.  Checks for null.
\par }\pard \ltrpar\ql \li0\ri0\sb100\sa100\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid8205052 {\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid4982414 AM}{\rtlch\fcs1 \ab\af1 \ltrch\fcs0 \b\f1\insrsid7887376\charrsid1932416 ToString}{\rtlch\fcs1 
\af1 \ltrch\fcs0 \f1\insrsid7887376\charrsid1932416  \endash }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid3218881\charrsid1932416  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid7887376\charrsid1932416 This class turns }{\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid3218881\charrsid1932416 mediatype }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid7887376\charrsid1932416 structures }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid3218881\charrsid1932416 and Guids }{\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid7887376\charrsid1932416 into human readable strings.
\par }\pard \ltrpar\ql \li0\ri-1620\sb100\sa100\nowidctlpar\wrapdefault\faauto\rin-1620\lin0\itap0\pararsid1932416 {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid7887376\charrsid1932416 AMMediaTypeToString \endash  Produces a human readable form of an AMMediaType

\par MediaTypeToString \endash  Produces a human readable form of a MediaType
\par MediaSubTypeToString \endash  Produces a human readable form of a MediaSubType
\par MediaFormatTypeToString \endash  Produces a human readable form of a MediaFormatType}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid7887376 
\par }{\rtlch\fcs1 \af1 \ltrch\fcs0 \b\f1\insrsid478035\charrsid478035 Constants}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid478035  \endash  This class contains definitions for the (many) strings WM uses; most of them attribute strings of some sort.
\par }\pard \ltrpar\ql \li0\ri0\sb100\sa100\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid5517092 {\rtlch\fcs1 \af1 \ltrch\fcs0 \b\f1\insrsid5517092\charrsid5517092 FourCC}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid5517092\charrsid5517092  - This cl
ass is useful for processing }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid5517092 4cc\rquote s}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid5517092\charrsid5517092  (see }{\field\flddirty{\*\fldinst {\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid5517092\charrsid5517092  HYPERLINK "http://msdn2.microsoft.com/en-us/library/ms783788.aspx" }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15886061\charrsid5517092 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b8600000068007400740070003a002f002f006d00730064006e0032002e006d006900630072006f0073006f00660074002e0063006f006d002f0065006e002d00750073002f006c006900620072006100720079002f00
6d0073003700380033003700380038002e0061007300700078000000795881f43b1d7f48af2c825dc485276300000000a5ab00000000000000000000}}}{\fldrslt {\rtlch\fcs1 \af1 \ltrch\fcs0 \cs15\f1\ul\cf2\insrsid5517092\charrsid5517092 
http://msdn2.microsoft.com/en-us/library/ms783788.aspx}}}\sectd \linex0\sectdefaultcl\sftnbj {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid5517092\charrsid5517092  for a discussion of some of the basics of 4 character codes).  It contains methods for converti}
{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid5517092 ng from ints to 4cc\rquote s and Guids and bytes.
\par }\pard \ltrpar\ql \li0\ri0\sb100\sa100\nowidctlpar\wrapdefault\faauto\rin0\lin0\itap0\pararsid3760372 {\rtlch\fcs1 \af1 \ltrch\fcs0 \b\f1\insrsid3760372\charrsid3760372 WmInt}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid3760372\charrsid3760372  & }{
\rtlch\fcs1 \af1 \ltrch\fcs0 \b\f1\insrsid3760372\charrsid3760372 WmShort}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid3760372\charrsid3760372  \endash  These class is a wrapper for ints}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid3760372  and shorts}{
\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid3760372\charrsid3760372 .  The only time you should need to use this class is if you are dealing}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid3760372  with parameters to (or from) WM}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid3760372\charrsid3760372  that are \'93out int\'94, but \'93can be null.\'94  If you are implementing }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid3760372 a }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid3760372\charrsid3760372 
method that has such a data}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid3760372  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid3760372\charrsid3760372 type, you will want to check the value to see if it is null, then use the Assign() method to assign a value.}{
\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\insrsid5517092\charrsid478035 
\par }\pard\plain \ltrpar\s3\ql \li0\ri-1620\sb240\sa60\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \ab\af1\afs26\alang1025 \ltrch\fcs0 
\b\f1\fs26\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid15286429\charrsid1655678 Samples
\par }\pard\plain \ltrpar\ql \li0\ri-1620\sb100\sa100\nowidctlpar\wrapdefault\faauto\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid15286429\charrsid1932416 There are a }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1013904\charrsid1932416 few }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15286429\charrsid1932416 samples }{\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid1932416\charrsid1932416 available }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15286429\charrsid1932416 to show how to perform various common tasks.  Not
e that these samples should not be considered commercial quality, but can form the basis of your own code.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15498287\charrsid1932416   The samples, along with descriptions are in a separate download at (}
{\field\flddirty{\*\fldinst {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1932416\charrsid1932416  HYPERLINK "http://sourceforge.net/project/showfiles.php?group_id=229696" }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15886061\charrsid1932416 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000003d00000068007400740070003a002f002f0073006f00750072006300650066006f007200670065002e006e00650074002f00700072006f006a006500630074002f00730068006f007700660069006c00650073002e007000680070003f00670072006f007500
70005f00690064003d003200320039003600390036000000e0c9ea79f9bace118c8200aa004ba90b9200000068007400740070003a002f002f0073006f00750072006300650066006f007200670065002e006e00650074002f00700072006f006a006500630074002f00730068006f007700660069006c00650073002e0070
00680070003f00670072006f00750070005f00690064003d003200320039003600390036000000795881f43b1d7f48af2c825dc485276300000000a5ab00000000}}}{\fldrslt {\rtlch\fcs1 \af1 \ltrch\fcs0 \cs15\f1\ul\cf2\insrsid1932416\charrsid1932416 http:/
/sourceforge.net/project/showfiles.php?group_id=229696}}}\sectd \linex0\sectdefaultcl\sftnbj {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15498287\charrsid1932416 ).}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15286429\charrsid1932416 
\par }\pard\plain \ltrpar\s3\ql \li0\ri-1620\sb240\sa60\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \ab\af1\afs26\alang1025 \ltrch\fcs0 
\b\f1\fs26\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid2845617\charrsid1655678 {\*\bkmkstart _Ref106788191}Using untested interfaces{\*\bkmkend _Ref106788191}
\par }\pard\plain \ltrpar\ql \li0\ri-1620\sb100\sa100\nowidctlpar\wrapdefault\faauto\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid2845617\charrsid1932416 The }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1013904\charrsid1932416 WindowsMedia}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 Lib contains interfaces for virtually all of }{\rtlch\fcs1 \af1 
\ltrch\fcs0 \f1\insrsid1013904\charrsid1932416 Windows Media }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 (}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid483942\charrsid1932416 over}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid5571757\charrsid1932416  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1013904\charrsid1932416 1}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid5571757\charrsid1932416 00 }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid483942\charrsid1932416 interfaces).}{
\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 
\par }\pard \ltrpar\ql \li0\ri-1620\nowidctlpar\wrapdefault\faauto\rin-1620\lin0\itap0\pararsid1932416 {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 1) Checking to see that the method is defined correctly according to the MSDN docs
\par 2) Change int to enum where needed
\par 3) Add any needed MarshalAs
\par 4) Verify that any needed structs are correctly defined 
\par 5) Remove unneeded "ref", add needed "out"
\par 6) (Where possible) remove IntPtr and use actual structs}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid5571757\charrsid1932416  or classes}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 
\par 7) Where necessary, create custom marshalers for passing structs
\par 8) Write code that calls the method, making sure that parameters that are documented to accept null, do so
\par }\pard \ltrpar\ql \li0\ri-1620\sb100\sa100\nowidctlpar\wrapdefault\faauto\rin-1620\lin0\itap0\pararsid1932416 {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 When 1-8 have be
en done for all the methods in an interface, the work is submitted to a second developer for review.  When reviewed, the interface is considered tested.
\par However, it may be that you need to use an interface that hasn't been tested yet.  All the untested }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15932462\charrsid1932416 interfaces, structs and enum are}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid2845617\charrsid1932416  included in the source, but are wrapped within:
\par #if ALLOW_UNTESTED_INTERFACES
\par #endif
\par Release builds of our library do not expose these }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15932462\charrsid1932416 interfaces}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 
.  If you want to enable all the methods, you can use #define in specific source files or globally with project properties to define th}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15932462\charrsid1932416 is constant}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid2845617\charrsid1932416 , then build your own copy of the library.  However, don't be surprised if some of the methods/interfaces that haven't been tested don't work correctly.  Also, when we eventually do test the method, we may }{\rtlch\fcs1 
\af1 \ltrch\fcs0 \f1\insrsid15932462\charrsid1932416 modify the declaration.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 
\par }\pard\plain \ltrpar\s3\ql \li0\ri-1620\sb240\sa60\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \ab\af1\afs26\alang1025 \ltrch\fcs0 
\b\f1\fs26\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid2845617\charrsid1655678 {\*\bkmkstart _Ref106788227}The plan for additional interfaces{\*\bkmkend _Ref106788227}
\par }\pard\plain \ltrpar\ql \li0\ri-1620\sb100\sa100\nowidctlpar\wrapdefault\faauto\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid2845617\charrsid1932416 The current plan calls for testing most of the }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1013904\charrsid1932416 Windows Media}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 
 interfaces.  No, not all of them.  Some interfaces are deprecated}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid3149574\charrsid1932416  or undocumented}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 , some are not
 meant to be called from applications.  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid5571757\charrsid1932416 If there is some particular interface you want to see added, consider volunteering to test it.}{\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid2845617\charrsid1932416 
\par }\pard\plain \ltrpar\s3\ql \li0\ri-1620\sb240\sa60\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \ab\af1\afs26\alang1025 \ltrch\fcs0 
\b\f1\fs26\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid2845617\charrsid1655678 Reporting bugs
\par }\pard\plain \ltrpar\ql \li0\ri-1620\sb100\sa100\nowidctlpar\wrapdefault\faauto\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid12675304\charrsid1932416 Bugs in this library should be reported to }{\field\flddirty{\*\fldinst {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid9381580\charrsid1932416  HYPERLINK "https://sourceforge.net/tracker/?group_id=229696&atid=1077866" }{
\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15886061\charrsid1932416 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000003e000000680074007400700073003a002f002f0073006f00750072006300650066006f007200670065002e006e00650074002f0074007200610063006b00650072002f003f00670072006f00750070005f00690064003d003200320039003600390036002600
61007400690064003d0031003000370037003800360036000000e0c9ea79f9bace118c8200aa004ba90b94000000680074007400700073003a002f002f0073006f00750072006300650066006f007200670065002e006e00650074002f0074007200610063006b00650072002f003f00670072006f00750070005f00690064
003d00320032003900360039003600260061007400690064003d0031003000370037003800360036000000795881f43b1d7f48af2c825dc485276300000000a5ab000000000000}}}{\fldrslt {\rtlch\fcs1 \af1 \ltrch\fcs0 \cs15\f1\ul\cf2\insrsid9381580\charrsid1932416 
https://sourceforge.net/tracker/?group_id=229696&atid=1077866}}}\sectd \linex0\sectdefaultcl\sftnbj {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid12675304\charrsid1932416 .}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617\charrsid1932416 
\par }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid12675304\charrsid1932416 Note that only bugs in the library, samples, or docs that are part of this project should be reported here.  Bugs in }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1013904\charrsid1932416 
Windows Media}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid12675304\charrsid1932416  itself }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid3160347\charrsid1932416 must be reported to Microsoft.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid12675304\charrsid1932416 

\par }\pard\plain \ltrpar\s3\ql \li0\ri-1620\sb240\sa60\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \ab\af1\afs26\alang1025 \ltrch\fcs0 
\b\f1\fs26\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid6771254\charrsid1655678 Links for help
\par }\pard\plain \ltrpar\ql \li0\ri-1620\sb100\sa100\nowidctlpar\wrapdefault\faauto\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid6771254\charrsid1932416 Your best place to start is the MSDN docs (see links under "}{\field\flddirty{\*\fldinst {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid6771254\charrsid1932416  REF _Ref106788285 \\h }{\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid15886061\charrsid1932416 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f00520065006600310030003600370038003800320038003500000000000000000000000000}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1655678\charrsid1932416  \\
* MERGEFORMAT }}{\fldrslt {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid6771254\charrsid1932416 Where to find the documentation}}}\sectd \linex0\sectdefaultcl\sftnbj {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid6771254\charrsid1932416 
").  If your question is about }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1013904\charrsid1932416 Windows Media}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid6771254\charrsid1932416  in general, you might want to post to one of Microsoft's ne
wsgroups (currently at }{\field{\*\fldinst {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid7354039  HYPERLINK "}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid7354039\charrsid7354039 
http://www.microsoft.com/communities/newsgroups/en-us/default.aspx?dg=microsoft.public.win32.programmer.mmedia&cat=en_US_8a1b7e9b-495c-41fd-90ae-95f504a5333d&lang=en&cr=US}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid7354039 " }{\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid15886061\charrsid4218235 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000017000000ac00000068007400740070003a002f002f007700770077002e006d006900630072006f0073006f00660074002e0063006f006d002f0063006f006d006d0075006e00690074006900650073002f006e00650077007300670072006f007500700073002f006500
6e002d00750073002f00640065006600610075006c0074002e0061007300700078003f00640067003d006d006900630072006f0073006f00660074002e007000750062006c00690063002e00770069006e00330032002e00700072006f006700720061006d006d00650072002e006d006d0065006400690061002600630061
0074003d0065006e005f00550053005f00380061003100620037006500390062002d0034003900350063002d0034003100660064002d0039003000610065002d0039003500660035003000340061003500330033003300640026006c0061006e0067003d0065006e002600630072003d00550053000000e0c9ea79f9bace11
8c8200aa004ba90b7001000068007400740070003a002f002f007700770077002e006d006900630072006f0073006f00660074002e0063006f006d002f0063006f006d006d0075006e00690074006900650073002f006e00650077007300670072006f007500700073002f0065006e002d00750073002f0064006500660061
0075006c0074002e0061007300700078003f00640067003d006d006900630072006f0073006f00660074002e007000750062006c00690063002e00770069006e00330032002e00700072006f006700720061006d006d00650072002e006d006d00650064006900610026006300610074003d0065006e005f00550053005f00
380061003100620037006500390062002d0034003900350063002d0034003100660064002d0039003000610065002d0039003500660035003000340061003500330033003300640026006c0061006e0067003d0065006e002600630072003d00550053000000795881f43b1d7f48af2c825dc485276300000000a5ab000000
00}}}{\fldrslt {\rtlch\fcs1 \af1 \ltrch\fcs0 \cs15\f1\ul\cf2\insrsid7354039\charrsid4218235 http://www.microsoft.com/communities/newsgroups/
en-us/default.aspx?dg=microsoft.public.win32.programmer.mmedia&cat=en_US_8a1b7e9b-495c-41fd-90ae-95f504a5333d&lang=en&cr=US}}}\sectd \linex0\sectdefaultcl\sftnbj {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid6771254\charrsid1932416 
).  If your question is specific to this library, you should post your question post in the \'93Open Discussion\'94 forum here: }{\field\flddirty{\*\fldinst {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid6771254\charrsid1932416  HYPERLI
NK "http://sourceforge.net/forum/forum.php?forum_id=460697" }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15886061\charrsid1932416 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000003700000068007400740070003a002f002f0073006f00750072006300650066006f007200670065002e006e00650074002f0066006f00720075006d002f0066006f00720075006d002e007000680070003f0066006f00720075006d005f00690064003d003400
360030003600390037000000e0c9ea79f9bace118c8200aa004ba90b6e00000068007400740070003a002f002f0073006f00750072006300650066006f007200670065002e006e00650074002f0066006f00720075006d002f0066006f00720075006d002e007000680070003f0066006f00720075006d005f00690064003d
00340036003000360039003700000000004f00000000000000000000000000}}}{\fldrslt {\rtlch\fcs1 \af1 \ltrch\fcs0 \cs15\f1\ul\cf2\insrsid6771254\charrsid1932416 http://sourceforge.net/forum/forum.php?forum_id=460697}}}\sectd \linex0\sectdefaultcl\sftnbj {
\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid6771254\charrsid1932416 .
\par }\pard\plain \ltrpar\s3\ql \li0\ri-1620\sb240\sa60\keepn\widctlpar\wrapdefault\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \ab\af1\afs26\alang1025 \ltrch\fcs0 
\b\f1\fs26\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid2845617\charrsid1655678 Offering to help
\par }\pard\plain \ltrpar\ql \li0\ri-1620\nowidctlpar\wrapdefault\faauto\rin-1620\lin0\itap0\pararsid1932416 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1932416 
There are several things that you could do to help this project.  These would be the best ways of saying thank you:}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid2845617 
\par }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1932416 
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1932416 \hich\af1\dbch\af0\loch\f1 1)\tab}}\pard \ltrpar\ql \fi-360\li720\ri-1620\nowidctlpar\jclisttab\tx720\wrapdefault\faauto\ls3\rin-1620\lin720\itap0\pararsid1932416 {\rtlch\fcs1 
\af1 \ltrch\fcs0 \f1\insrsid1932416 Find a way to test all the methods of one of the remaining interfaces.  You can see the existing test code at }{\field{\*\fldinst {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1932416  HYPERLINK "}{\rtlch\fcs1 \af1 
\ltrch\fcs0 \f1\insrsid1932416\charrsid1932416 http://windowsmedianet.cvs.sourceforge.net/windowsmedianet/wmlib/test/}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1932416 " }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15886061\charrsid4218235 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000004700000068007400740070003a002f002f00770069006e0064006f00770073006d0065006400690061006e00650074002e006300760073002e0073006f00750072006300650066006f007200670065002e006e00650074002f00770069006e0064006f007700
73006d0065006400690061006e00650074002f0077006d006c00690062002f0074006500730074002f000000e0c9ea79f9bace118c8200aa004ba90ba600000068007400740070003a002f002f00770069006e0064006f00770073006d0065006400690061006e00650074002e006300760073002e0073006f007500720063
00650066006f007200670065002e006e00650074002f00770069006e0064006f00770073006d0065006400690061006e00650074002f0077006d006c00690062002f0074006500730074002f000000795881f43b1d7f48af2c825dc485276300000000a5ab00000000}}}{\fldrslt {\rtlch\fcs1 \af1 \ltrch\fcs0 
\cs15\f1\ul\cf2\insrsid1932416\charrsid4218235 http://windowsmedianet.cvs.sourceforge.net/windowsmedianet/wmlib/test/}}}\sectd \linex0\sectdefaultcl\sftnbj {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1908446  and the list of remaining interfaces }{
\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid3555162 to test }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1908446 is in interfaces.txt.}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1932416 
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1932416 \hich\af1\dbch\af0\loch\f1 2)\tab}Report any errors (ie methods that don\rquote t work, enums missing values, incorrectly formatted structures, }{\rtlch\fcs1 \af1 \ltrch\fcs0 
\f1\insrsid3555162 doc errors }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1932416 etc) that you find.  Don\rquote t just make the corrections in your code, share the improvements with everyone.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 
\f1\insrsid1932416\charrsid1932416 
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1932416 \hich\af1\dbch\af0\loch\f1 3)\tab}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1932416 Create samples.  }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1908446 We *aren\rquote 
t* looking for end-all be-all samples that exercise every interface in a single cs file.  We }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid7354039 *}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1908446 are}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid7354039 *}{
\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1908446  looking for code that illustrates specific concepts, in short, easy to understand and copy routines that people can use in their own code.}{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 
\f1\insrsid1932416\charrsid1908446 
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \f1\insrsid1908446 \hich\af1\dbch\af0\loch\f1 4)\tab}}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1908446 If your time or training don\rquote 
t allow you to do any of the above, you can always just stop by the forum and say thanks.  }{\field{\*\fldinst {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1908446  HYPERLINK "}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1908446\charrsid1908446 
http://sourceforge.net/forum/forum.php?forum_id=829805}{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1908446 " }{\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid15886061\charrsid4218235 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000003700000068007400740070003a002f002f0073006f00750072006300650066006f007200670065002e006e00650074002f0066006f00720075006d002f0066006f00720075006d002e007000680070003f0066006f00720075006d005f00690064003d003800
320039003800300035000000e0c9ea79f9bace118c8200aa004ba90b8600000068007400740070003a002f002f0073006f00750072006300650066006f007200670065002e006e00650074002f0066006f00720075006d002f0066006f00720075006d002e007000680070003f0066006f00720075006d005f00690064003d
003800320039003800300035000000795881f43b1d7f48af2c825dc485276300000000a5ab00000000}}}{\fldrslt {\rtlch\fcs1 \af1 \ltrch\fcs0 \cs15\f1\ul\cf2\insrsid1908446\charrsid4218235 http://sourceforge.net/forum/forum.php?forum_id=829805}}}\sectd 
\linex0\sectdefaultcl\sftnbj {\rtlch\fcs1 \af1 \ltrch\fcs0 \f1\insrsid1908446  }{\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\insrsid1908446\charrsid1932416 
\par }\pard \ltrpar\ql \li0\ri-1620\nowidctlpar\wrapdefault\faauto\rin-1620\lin0\itap0\pararsid1932416 {\rtlch\fcs1 \af1\afs20 \ltrch\fcs0 \f1\fs20\insrsid9381580\charrsid1655678 
\par }}